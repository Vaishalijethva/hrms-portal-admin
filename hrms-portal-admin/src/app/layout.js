// import { Geist, Geist_Mono } from "next/font/google";
'use client';
import React, { useEffect, useState } from "react";
import {  Inter, Elza } from "next/font/google";
import "./globals.css";
import ChildLayout from "./components/childLayout";
import {useRouter} from "next/navigation";
import Login from "./components/login";


// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });
const inter = Inter({
  weight: ['400', '500', '600', '700', '800', '900'],
  variable: "--font-inter",
  subsets: ["latin"],
});
// const elza = Elza({
//   variable: "--font-elza",
//   subsets: ["latin"],
// });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

export default function RootLayout({ children }) {

   const [isLoggedIn, setIsLoggedIn] = useState(false);
  //  const [loading, setLoading] = useState(true);
    const router = useRouter();
  
  // useEffect(() => {
  //   const loggedIn = localStorage.getItem("loggedIn") === "true";
  //   setIsLoggedIn(loggedIn);
  //   setLoading(false);
  // },[])

    const handleLoginSuccess = () => {
      // localStorage.setItem("loggedIn", "true");
      setIsLoggedIn(true);
    }
  
   
    const handleLogout = () => {
      //  localStorage.removeItem('loggedIn')
      setIsLoggedIn(false);
    }
    // if (loading) return null;

  return (
    <html lang="en">
      <body
        // className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        className={` ${inter.variable}  antialiased`}

      >
        {isLoggedIn ? (
           <ChildLayout onLogout={handleLogout}>{children}</ChildLayout>
           ):(
                  <Login onLoginSuccess={handleLoginSuccess}/>
                )} 
        {/* {children} */}
       
      </body>
    </html>
  );
}
